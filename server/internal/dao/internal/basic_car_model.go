// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// BasicCarModelDao is the data access object for table hg_basic_car_model.
type BasicCarModelDao struct {
	table   string               // table is the underlying table name of the DAO.
	group   string               // group is the database configuration group name of current DAO.
	columns BasicCarModelColumns // columns contains all the column names of Table for convenient usage.
}

// BasicCarModelColumns defines and stores column names for table hg_basic_car_model.
type BasicCarModelColumns struct {
	Id            string //
	Code          string // 车型编码
	Brand         string // 品牌
	Cc            string // 排量
	Year          string // 年款
	Model         string // 车型
	SaleName      string // 销售名称
	Country       string // 国家
	Type          string // 国产合资进口
	Vender        string // 厂家
	Fuel          string // 燃油类型
	Gearbox       string // 变速箱类型
	GearboxDesc   string // 变速箱描述
	FrontTireSpec string // 前轮胎规格
	BackTireSpec  string // 后轮胎规格
	FrontHubSpec  string // 前轮毂规格
	BackHubSpec   string // 后轮毂规格
	Series        string // 车系
	CreatedAt     string // 创建时间
	UpdatedAt     string // 更新时间
	CreatedById   string // 创建用户的id
	UpdatedById   string // 更新用户的id
	Deleted       string // 是否标记删除
	Status        string // 0启用1禁用
}

// basicCarModelColumns holds the columns for table hg_basic_car_model.
var basicCarModelColumns = BasicCarModelColumns{
	Id:            "id",
	Code:          "code",
	Brand:         "brand",
	Cc:            "cc",
	Year:          "year",
	Model:         "model",
	SaleName:      "sale_name",
	Country:       "country",
	Type:          "type",
	Vender:        "vender",
	Fuel:          "fuel",
	Gearbox:       "gearbox",
	GearboxDesc:   "gearbox_desc",
	FrontTireSpec: "front_tire_spec",
	BackTireSpec:  "back_tire_spec",
	FrontHubSpec:  "front_hub_spec",
	BackHubSpec:   "back_hub_spec",
	Series:        "series",
	CreatedAt:     "createdAt",
	UpdatedAt:     "updatedAt",
	CreatedById:   "createdById",
	UpdatedById:   "updatedById",
	Deleted:       "deleted",
	Status:        "status",
}

// NewBasicCarModelDao creates and returns a new DAO object for table data access.
func NewBasicCarModelDao() *BasicCarModelDao {
	return &BasicCarModelDao{
		group:   "default",
		table:   "hg_basic_car_model",
		columns: basicCarModelColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *BasicCarModelDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *BasicCarModelDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *BasicCarModelDao) Columns() BasicCarModelColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *BasicCarModelDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *BasicCarModelDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *BasicCarModelDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
