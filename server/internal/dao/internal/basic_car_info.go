// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// BasicCarInfoDao is the data access object for table hg_basic_car_info.
type BasicCarInfoDao struct {
	table   string              // table is the underlying table name of the DAO.
	group   string              // group is the database configuration group name of current DAO.
	columns BasicCarInfoColumns // columns contains all the column names of Table for convenient usage.
}

// BasicCarInfoColumns defines and stores column names for table hg_basic_car_info.
type BasicCarInfoColumns struct {
	Id                     string //
	Licence                string // 车牌号
	Vin                    string // VIN码
	CarId                  string // 车型id
	EngineNo               string // 发动机号
	CarCategory            string // 上海车型分类
	UseType                string // 使用性质
	FuelType               string // 燃油类型
	ColorType              string // 颜色类型
	CategoryCode           string // 上海车型分类代码
	BuyDate                string // 购车日期
	EngineModel            string // 发动机型号
	CustomerId             string // 客户id
	DriverName             string // 驾驶人姓名
	DriverPhone            string // 驾驶人手机
	DriverTelephone        string // 驾驶人电话
	DriverCertificate      string // 驾驶人证件
	DriverDueDate          string // 驾照到期日
	DriverBirthday         string // 驾驶人生日
	DriverLicensePhoto     string // 驾驶证照片
	DriverVehiclePhoto     string // 行驶证照片
	DriverCertificatePhoto string // 身份证照片
	DriverInsurePhoto      string // 车辆保险照片
	BuyCarPhoto            string // 购车照片
	OtherPhoto             string // 其他照片
	CreatedAt              string // 创建时间
	UpdatedAt              string // 更新时间
	CreatedById            string // 创建用户的id
	UpdatedById            string // 更新用户的id
	Deleted                string // 是否标记删除
	Status                 string // 0启用1禁用
}

// basicCarInfoColumns holds the columns for table hg_basic_car_info.
var basicCarInfoColumns = BasicCarInfoColumns{
	Id:                     "id",
	Licence:                "licence",
	Vin:                    "vin",
	CarId:                  "car_id",
	EngineNo:               "engine_no",
	CarCategory:            "car_category",
	UseType:                "use_type",
	FuelType:               "fuel_type",
	ColorType:              "color_type",
	CategoryCode:           "category_code",
	BuyDate:                "buy_date",
	EngineModel:            "engine_model",
	CustomerId:             "customer_id",
	DriverName:             "driver_name",
	DriverPhone:            "driver_phone",
	DriverTelephone:        "driver_telephone",
	DriverCertificate:      "driver_certificate",
	DriverDueDate:          "driver_due_date",
	DriverBirthday:         "driver_birthday",
	DriverLicensePhoto:     "driver_license_photo",
	DriverVehiclePhoto:     "driver_vehicle_photo",
	DriverCertificatePhoto: "driver_certificate_photo",
	DriverInsurePhoto:      "driver_insure_photo",
	BuyCarPhoto:            "buy_car_photo",
	OtherPhoto:             "other_photo",
	CreatedAt:              "createdAt",
	UpdatedAt:              "updatedAt",
	CreatedById:            "createdById",
	UpdatedById:            "updatedById",
	Deleted:                "deleted",
	Status:                 "status",
}

// NewBasicCarInfoDao creates and returns a new DAO object for table data access.
func NewBasicCarInfoDao() *BasicCarInfoDao {
	return &BasicCarInfoDao{
		group:   "default",
		table:   "hg_basic_car_info",
		columns: basicCarInfoColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *BasicCarInfoDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *BasicCarInfoDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *BasicCarInfoDao) Columns() BasicCarInfoColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *BasicCarInfoDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *BasicCarInfoDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *BasicCarInfoDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
